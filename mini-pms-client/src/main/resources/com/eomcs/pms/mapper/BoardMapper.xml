<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- SQL 문 목록 
namespace 속성
- SQL 문을 가리킬 때 사용할 그룹명이다.
- 보통 SQL을 사용하는 객체 이름으로 설정한다.
- 즉 DAO 인터페이스 또는 클래스명으로 설정한다.
- 그래야만 유지보수할 때 DAO와 연결된 SQL을 바로 찾을 수 있다.

-->
<mapper namespace="BoardDao">
  
  <!-- 컬럼의 값을 어떤 자바 객체에 담을 것인지 
       다음과 같이 따로 정의할 수 있다. 
      - type 속성 : 자바 클래스명 
      - id 속성 : 컬럼-프로퍼티의 연결 정보를 가리킬 이름. 
                  SQL 문을 정의할 때 사용.
  -->
  <resultMap type="com.eomcs.pms.domain.Board" id="BoardMap">
    <!-- 자바 코드
         Board b = new Board();
         b.setNo(rs.getInt("no"));
         b.setTitle(rs.getString("title"));
         b.setRegisteredDate(rs.getDate("cdt"));
         b.setViewCount(rs.getInt("vw_cnt"));
    -->
    <id column="no"           property="no"/>
    <result column="title"    property="title"/>
    <result column="content"  property="content"/>
    <result column="cdt"      property="registeredDate"/>
    <result column="vw_cnt"   property="viewCount"/>
    
    <!-- 
      Member m = new Member();
      m.setNo(rs.getInt("no"));
      m.setName(rs.getString("name"));
      b.setWriter(m);
    -->
    <association property="writer" javaType="com.eomcs.pms.domain.Member">
      <id column="writer_no"    property="no"/>
      <result column="name"     property="name"/>
    </association>
  </resultMap>


  <!-- select 태그
    - select SQL 문을 정의하는 태그다.
    - id 속성
      - mybatis에서 SQL을 찾을 때 사용할 이름이다.
      - 보통 이 SQL을 사용하는 메서드 이름으로 설정한다.
      - 이렇게 하면 다른 개발자가 이해하기 쉬울 것이다.
    - resultType 속성
      - select 결과물에서 각 레코드 값을 담을 도메인 객체 이름이다.
      - select의 결과가 여러 개라면, 해당 도메인 객체도 여러 개가 생성될 것이다.
      - 이렇게 여러 개 생성된 도메인 객체는 List 컬렉션 객체에 저장된다.
      - 그리고 List 컬렉션 객체가 최종적으로 리턴된다.
   -->
  <select id="findAll" resultMap="BoardMap">
    select 
      b.no, 
      b.title, 
      b.cdt, 
      b.vw_cnt, 
      m.no writer_no, 
      m.name
    from 
      pms_board b 
      inner join pms_member m on b.writer=m.no
    order by 
      b.no desc
  </select>
  
  <insert id="insert" parameterType="com.eomcs.pms.domain.Board">
    insert into pms_board(title,content,writer) 
    values(#{title}, #{content}, #{writer.no})
  </insert>
  
  <select id="findByNo" 
    parameterType="java.lang.Integer" 
    resultMap="BoardMap">
    select
	    b.no,
	    b.title,
	    b.content,
	    b.cdt,
	    b.vw_cnt,
	    m.no writer_no,
	    m.name
    from 
      pms_board b inner join pms_member m on b.writer=m.no
    where b.no = #{no}
  </select>
  
  <update id="updateViewCount" parameterType="java.lang.Integer">
    update pms_board set 
      vw_cnt = vw_cnt + 1
    where no = #{no}
  </update>

  <update id="update" parameterType="com.eomcs.pms.domain.Board">
    update pms_board set 
      title = #{title}, 
      content = #{content} 
    where no = #{no}
  </update>
  
  <delete id="delete" parameterType="java.lang.Integer">
    delete from pms_board 
    where no=#{no}
  </delete>
</mapper>






